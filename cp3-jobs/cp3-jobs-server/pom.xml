<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>cp3-jobs</artifactId>
        <groupId>com.cp3.cloud</groupId>
        <version>2.0.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>cp3-jobs-server</artifactId>
    <name>${project.artifactId}</name>
    <description>定时服务启动模块</description>

    <dependencies>
        <!-- 单机版jobs，请打开该依赖，然后无需启动cp3-executor-server -->
        <dependency>
            <groupId>com.cp3.cloud</groupId>
            <artifactId>cp3-jobs-executor</artifactId>
            <version>${cp3-cloud-project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.cp3.cloud</groupId>
            <artifactId>cp3-authority-biz</artifactId>
            <version>${cp3-cloud-project.version}</version>
        </dependency>
        <!--去掉authority-biz,不支持@EnableLoginArgResolver,还需要单独加其它依赖，如下-->
        <!--<dependency>
            <groupId>com.cp3.cloud</groupId>
            <artifactId>cp3-common</artifactId>
            <version>${cp3-cloud-project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.cp3.base</groupId>
            <artifactId>cp3-cloud-starter</artifactId>
        </dependency>-->

        <!-- xxl-job-core -->
        <dependency>
            <groupId>com.cp3.cloud</groupId>
            <artifactId>cp3-jobs-core</artifactId>
            <version>${cp3-cloud-project.version}</version>
        </dependency>

        <dependency>
            <groupId>com.cp3.base</groupId>
            <artifactId>cp3-databases</artifactId>
        </dependency>

        <dependency>
            <groupId>com.cp3.base</groupId>
            <artifactId>cp3-log-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-context</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.tomcat.embed</groupId>
                    <artifactId>tomcat-embed-websocket</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>
        <!-- freemarker-starter -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-freemarker</artifactId>
        </dependency>
        <!-- mail-starter -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>
        <!-- starter-actuator -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- 持久层相关 -->
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>

        <!-- 测试 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <filters>
            <filter>../../src/main/filters/config-${profile.active}.properties</filter>
        </filters>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <executable>true</executable>
                </configuration>
            </plugin>
            <!-- docker打包插件 -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>${dockerfile-maven-plugin.version}</version>
                <configuration>
                    <repository>${docker.image.prefix}/${project.artifactId}</repository>
                    <tag>${cp3-cloud-project.version}</tag>
                    <buildArgs>
                        <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
                    </buildArgs>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
