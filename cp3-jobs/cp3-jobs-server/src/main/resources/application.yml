#cp3:
#  database: # 字段介绍参考 DatabaseProperties
#    tenantDatabasePrefix: cp3_job
#    isSeata: false


logging:
  io.seata: debug
  org.springframework.cloud.alibaba.seata.web: debug

server:
  servlet:
    context-path:
  port: 8767

#spring:
#  #cp3-job用
#  mvc:
#    static-path-pattern: /static/**
#  resources:
#    static-locations: classpath:/static/
#  freemarker:
#    templateLoaderPath: classpath:/templates/
#    suffix: .ftl
#    charset: UTF-8
#    request-context-attribute: request
#    settings:
#      number_format: 0.##       #解決freemarker数字输出中的逗号问题
#      #      classic_compatible: true  #默认情况变量为null则替换为空字符串，如果需要自定义，写上${empty!"EmptyValue of fbysss"}的形式即可
#      whitespace_stripping: true      # 剥离前后空字符串
#      boolean_format: true,false      # 布尔类型格式化
#      datetime_format: yyyy-MM-dd HH:mm:ss  # dateTime 类型格式化， 使用日期类型时， 需要在参数后追加 ?datetime eg: ${date?datetime}
#      date_format: yyyy-MM-dd   # date 类型格式化， 使用日期类型时， 需要在参数后追加 ?date eg: ${date?date}
#      time_format: HH:mm:ss      # time 类型格式化， 使用日期类型时， 需要在参数后追加 ?time eg: ${date?time}
#      template_exception_handler: ignore   # 忽略模版异常
#      default_encoding: UTF-8      # 默认编码
#      url_escaping_charset: UTF-8  # url 转义编码
#  mail:
#    host: smtp.qq.com
#    port: 25
#    username: xxx@qq.com
#    from: xxx@qq.com
#    password: xxx
#    mail:
#      smtp:
#        auth: true
#        starttls:
#          enable: true
#          required: true
#        socketFactory:
#          class: javax.net.ssl.SSLSocketFactory
  #cp3-job结束

### xxl-job email
xxl.job:
#  mail:
#    host: test.smtp.163.com
#    port: 25
#    ssl: false
#    username: ovono802302@163.com
#    password: asdfzxcv
#    sendNick: 《任务调度平台CP3-JOB》
  login:
    username: admin
    password: admin
  # 调度中心国际化配置 ： 默认为 "zh_CN"/中文简体, 可选范围为 "zh_CN"/中文简体, "zh_TC"/中文繁体 and "en"/英文；
  i18n: zh_CN
  #设置一：调度中心和执行器，均不设置AccessToken；关闭安全性校验；
  #设置二：调度中心和执行器，设置了相同的AccessToken；
  accessToken:
  # 以下是client 执行器端配置（注意：若不想配置调度器也是执行器，请自行参考xxl）
  admin:
    addresses: http://127.0.0.1:${server.port}/${spring.application.name}
  executor:
    # 执行器名
    appname: ${spring.application.name}
    # # 调度器通过XXL-RPC跟执行器通信的IP
    ip: ${EXECUTOR_IP:127.0.0.1}
    # 调度器通过XXL-RPC跟执行器通信的端口
    port: ${EXECUTOR_PORT:8771}
    address:
    registryLazy: 10000  # 延迟10秒注册，防止首次启动报错
    # 日志路径
    logpath: ${logging.file.path}/${spring.application.name}/
    # 日志保留天数
    logretentiondays: -1
  ## xxl-job, triggerpool max size
  triggerpool:
    fast:
      max: 200
    slow:
      max: 200
  # 日志保留天数
  logretentiondays: -1


#####################

cp3:
  mysql:
    ip: 10.45.50.241
    port: 3308
    driverClassName: com.mysql.cj.jdbc.Driver
    database: cp3_job  #当cp3_defaults时,由于jobs工程在启动进行jobs初始化时获取不到tenant_code（应在请求中带入）,只先直接使用cp3_job
    username: 'root'
    password: 'root'
    url: jdbc:mysql://${cp3.mysql.ip}:${cp3.mysql.port}/${cp3.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&nullCatalogMeansCurrent=true
  database: # 字段介绍参考 DatabaseProperties
    tenantDatabasePrefix: cp3_job  #去掉通过配置，方便个性化配置
    multiTenantType: SCHEMA
    isNotWrite: false
    isBlockAttack: false
    isSeata: false #去掉通过配置，方便个性化配置
    id-type: HU_TOOL
    hutoolId:
      workerId: 0
      dataCenterId: 0
    cache-id:
      time-bits: 31
      worker-bits: 22
      seq-bits: 10
      epochStr: '2020-09-15'
      boost-power: 3
      padding-factor: 50

# mysql 通用配置
spring:
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
  datasource:
    dynamic:
      enabled: false  # 这里一定要写成false，无论是什么模式
      # 从这里开始(dynamic)，中间的这段配置用于 cp3.database.multiTenantType == DATASOURCE 时
      # 联系群主开通
      # 从这里结束(dynamic)，中间的这段配置用于 cp3.database.multiTenantType == DATASOURCE 时
    druid:
      enable: true
      # 从这里开始(druid)，中间的这段配置用于 cp3.database.multiTenantType != DATASOURCE 时
      username: ${cp3.mysql.username}
      password: ${cp3.mysql.password}
      driver-class-name: ${cp3.mysql.driverClassName}
      url: jdbc:mysql://${cp3.mysql.ip}:${cp3.mysql.port}/${cp3.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&nullCatalogMeansCurrent=true
      db-type: mysql
      initialSize: 10
      minIdle: 10
      maxActive: 200
      max-wait: 60000
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      validation-query: SELECT 'x'
      test-on-borrow: false
      test-on-return: false
      test-while-idle: true
      time-between-eviction-runs-millis: 60000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      min-evictable-idle-time-millis: 300000    #配置一个连接在池中最小生存的时间，单位是毫秒
      filters: stat,wall
      filter:
        wall:
          enabled: true
          config:
            commentAllow: true
            multiStatementAllow: true
            noneBaseStatementAllow: true
      # 从这里结束(druid)，中间的这段配置用于 cp3.database.multiTenantType != DATASOURCE 时

      # 以下的2段配置，同时适用于所有模式
      web-stat-filter:  # WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
        enabled: true
        url-pattern: /*
        exclusions: "*.js , *.gif ,*.jpg ,*.png ,*.css ,*.ico , /druid/*"
        session-stat-max-count: 1000
        profile-enable: true
        session-stat-enable: false
      stat-view-servlet:  #展示Druid的统计信息,StatViewServlet的用途包括：1.提供监控信息展示的html页面2.提供监控信息的JSON API
        enabled: true
        url-pattern: /druid/*   #根据配置中的url-pattern来访问内置监控页面，如果是上面的配置，内置监控页面的首页是/druid/index.html例如：http://127.0.0.1:9000/druid/index.html
        reset-enable: true    #允许清空统计数据
        login-username: cp3
        login-password: cp3
  #cp3-job用
  mvc:
    static-path-pattern: /static/**
  resources:
    static-locations: classpath:/static/
  freemarker:
    templateLoaderPath: classpath:/templates/
    suffix: .ftl
    charset: UTF-8
    request-context-attribute: request
    settings:
      number_format: 0.##       #解決freemarker数字输出中的逗号问题
      #      classic_compatible: true  #默认情况变量为null则替换为空字符串，如果需要自定义，写上${empty!"EmptyValue of fbysss"}的形式即可
      whitespace_stripping: true      # 剥离前后空字符串
      boolean_format: true,false      # 布尔类型格式化
      datetime_format: yyyy-MM-dd HH:mm:ss  # dateTime 类型格式化， 使用日期类型时， 需要在参数后追加 ?datetime eg: ${date?datetime}
      date_format: yyyy-MM-dd   # date 类型格式化， 使用日期类型时， 需要在参数后追加 ?date eg: ${date?date}
      time_format: HH:mm:ss      # time 类型格式化， 使用日期类型时， 需要在参数后追加 ?time eg: ${date?time}
      template_exception_handler: ignore   # 忽略模版异常
      default_encoding: UTF-8      # 默认编码
      url_escaping_charset: UTF-8  # url 转义编码
  mail:
    host: smtp.qq.com
    port: 25
    username: xxx@qq.com
    from: xxx@qq.com
    password: xxx
    mail:
      smtp:
        auth: true
        starttls:
          enable: true
          required: true
        socketFactory:
          class: javax.net.ssl.SSLSocketFactory
  #cp3-job end

mybatis-plus:
  mapper-locations:
    - classpath*:mapper_**/**/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.cp3.cloud.*.entity;com.cp3.base.database.mybatis.typehandler;com.xxl.job.admin.core.model
  typeEnumsPackage: com.cp3.cloud.*.enumeration
  global-config:
    db-config:
      id-type: INPUT
      insert-strategy: NOT_NULL
      update-strategy: NOT_NULL
      select-strategy: NOT_EMPTY
  configuration:
    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）
    map-underscore-to-camel-case: true
    cache-enabled: false
    #配置JdbcTypeForNull, oracle数据库必须配置
    jdbc-type-for-null: 'null'

# 分布式事务相关
seata:
  enabled: ${cp3.database.isSeata}
  enableAutoDataSourceProxy: true
  tx-service-group: cp3_admin_seata_tx_group
  registry:
    type: nacos
    nacos:
      server-addr: ${cp3.nacos.ip}:${cp3.nacos.port}
      username: ${cp3.nacos.username}
      password: ${cp3.nacos.password}
      namespace: ${cp3.seata.namespace}
  config:
    type: nacos
    nacos:
      server-addr: ${cp3.nacos.ip}:${cp3.nacos.port}
      username: ${cp3.nacos.username}
      password: ${cp3.nacos.password}
      namespace: ${cp3.seata.namespace}
  service:
    grouplist:
      default: ${cp3.seata.ip:}:${cp3.seata.port:}
    vgroup-mapping:
      cp3_admin_seata_tx_group: default
    disable-global-transaction: false
  client:
    rm:
      report-success-enable: false

#########################################################

